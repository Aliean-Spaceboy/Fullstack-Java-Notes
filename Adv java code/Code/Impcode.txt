Example Application on HTML based form page to servlet communication
=========================================================================
Diagram: servlet3.2

Deployment Directory Structure
-----------------------------
VoteApp
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---VoteSrv.java
|
|---WebContent
	|
	|---form.html
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


We can send the request to servlet program in two methodologies.

1) GET methodology 
------------------
	It will carry limited amount of data.

2) POST methodology 
-------------------
	It will carry unlimited amount of data.

While extending with HttpServlet class , it is never recommanded to use service(-,-) method because it is not designed according to HTTP protocol.

IT is always recommanded to use doXxx(-,-) methods because they have designed according to HTTP protocol.

We have seven doXxx(-,-) methods.

ex:
	doGet(-,-)
	doPost(-,-)
	doPut(-,-)
	doDelete(-,-)
	doOption(-,-)
	doTrace(-,-)
	doHead(-,-)


prototype of doXxx(-,-)
----------------------
protected void doGet(HttpServletRequest req,HttpServletResponse res)throws 					ServletException,IOException
{

}

form.html
----------

<form action="test" method="GET">
	
	Name: <input type="text" name="t1"/> <br>
	
	Age: <input type="text" name="t2"/> <br>
	
	<input type="submit" value="vote"/>	

</form>


web.xml
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
 	<servlet>
		<servlet-name>VoteSrv</servlet-name> 
		<servlet-class>com.ihub.www.VoteSrv</servlet-class>	
 	</servlet>
 	<servlet-mapping>
 		<servlet-name>VoteSrv</servlet-name>
 		<url-pattern>/test</url-pattern>
 	</servlet-mapping>
 	
 	<welcome-file-list>
 		<welcome-file>form.html</welcome-file>
 	</welcome-file-list>

</web-app>


VoteSrv.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class VoteSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name=req.getParameter("t1");
		String sage=req.getParameter("t2");
		
		//convert string age to int age 
		int age=Integer.parseInt(sage);
		
		if(age<18)
			pw.println("<center><h1 style='color:red'>"+name+" U r not eligible to vote </h1> </center>");
		else
			pw.println("<center> <h1 style='color:green'>"+name+" U r eligible to vote </h1> </center>");
		
		pw.close();
	}
}

Request url
-----------
	http://localhost:2525/VoteApp





MVC in JSP
=========
Deployment Directory Structure
------------------------------
MVCApp
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---LoginBean.java
			|---LoginSrv.java
|---WebContent
	|
	|---form.html
	|---view.jsp
	|---error.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------
<form action="test">

	<table align="center">
		
		<tr>
			<td>UserName:</td>
			<td><input type="text" name="username"/></td>
		</tr>
		
		<tr>
			<td>Password:</td>
			<td><input type="password" name="password"/></td>
		</tr>
		
		<tr>
			<td><input type="reset" value="reset"/></td>
			<td><input type="submit" value="submit"/></td>
		</tr>
		
	</table>
	
</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <servlet>
  	<servlet-name>LoginSrv</servlet-name>
  	<servlet-class>com.ihub.www.LoginSrv</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>LoginSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

LoginBean.java
-------------
package com.ihub.www;

public class LoginBean 
{
	private String username;
	private String password;
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
}

LoginSrv.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class LoginSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String uname=req.getParameter("username");
		String pass=req.getParameter("password");
		
		//keeping form data in bean object
		LoginBean lb=new LoginBean();
		lb.setUsername(uname);
		lb.setPassword(pass);
		
		//set the bean object to request
		req.setAttribute("bean", lb);
		
		if(pass.equals("admin"))
		{
			RequestDispatcher rd=req.getRequestDispatcher("view.jsp");
			rd.forward(req, res);
		}
		else
		{
			RequestDispatcher rd=req.getRequestDispatcher("error.jsp");
			rd.forward(req, res);
		}
		pw.close();
		
	}
}

view.jsp
-------
<%@page  import="com.ihub.www.LoginBean" %>

<%
	LoginBean lb=(LoginBean)request.getAttribute("bean");
%>
UserName and Passsword are : <br>
<%= lb.getUsername() %> <br>
<%= lb.getPassword() %> <br>

error.jsp
----------
<center>
	<b style="color:red">
		Sorry! Username or Password incorrect
	</b>
</center>

<%@include file="form.html" %>


Request url
------------
	http://localhost:2525/MVCApp/




Steps to develop first JDBC Application to select the record from student table using eclipse IDE
=================================================================================================

SelectApp.java
---------------
package com.ihub.www;

//import --> ctrl + shift + o 
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class SelectApp 
{
	public static void main(String[] args)throws Exception 
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
	
		Statement st=con.createStatement();
		
		ResultSet rs=st.executeQuery("select * from student");
		
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
		}
		
		rs.close();
		st.close();
		con.close();
	}
}


Q) Write a jdbc application to insert a record into student table?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class InsertApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		
		System.out.println("Enter the student name :");
		String name=sc.next();
		
		System.out.println("Enter the student Address :");
		String add=sc.next();
		
		//convert string inputs according to SQL Query.
		name="'"+name+"'";
		add="'"+add+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="insert into student values("+no+","+name+","+add+")";
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record Inserted");
		else
			System.out.println("Record Inserted");
		
		st.close();
		con.close();
	}
}
